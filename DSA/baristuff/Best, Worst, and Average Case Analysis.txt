"""
Best, Worst, and Average Case Analysis

Linear and Binary Search

Linear Search:
Suppose we have a list of elements and we are looking for a target element that can/cannot be in the list

The best case:
is that the target element is the first element in the value meaning O(1)

The worst case:
is that the target element is not in the list or last element in list and in order to know that, we will have to 
search the entire list which will be n where n is the length of the list. O(n)

The Average Case (all possible case time/number of cases):
Lets assume the list = [1,2,3,4,5,6]

The average time = (1 + 2 + 3 + 4 + 5 ... +n)/n where all possible cases is the summation of all steps from 0 to n
This means that the avg case = (n(n+1)/2)/n or n(n+1)/2

Continuing...
We can say linear search best case is 1, B(n) = 1. This is sthe same as saying B(n) = O(1), Omega(1), or Theta(1)

We can say the worst case is n, w(n) is O(n). This is the same as saying O(n), Omega(n) and Theta(n)


Binary Search Tree: Refer to Notes
"""